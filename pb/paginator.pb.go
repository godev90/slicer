// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: paginator.proto

package slicerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         uint32                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Sort          []*SortField           `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Search        *SearchQuery           `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	Select        []string               `protobuf:"bytes,5,rep,name=select,proto3" json:"select,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Comparisons   []*ComparisonFilter    `protobuf:"bytes,7,rep,name=comparisons,proto3" json:"comparisons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOptions) Reset() {
	*x = QueryOptions{}
	mi := &file_paginator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOptions) ProtoMessage() {}

func (x *QueryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_paginator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOptions.ProtoReflect.Descriptor instead.
func (*QueryOptions) Descriptor() ([]byte, []int) {
	return file_paginator_proto_rawDescGZIP(), []int{0}
}

func (x *QueryOptions) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryOptions) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryOptions) GetSort() []*SortField {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *QueryOptions) GetSearch() *SearchQuery {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *QueryOptions) GetSelect() []string {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *QueryOptions) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *QueryOptions) GetComparisons() []*ComparisonFilter {
	if x != nil {
		return x.Comparisons
	}
	return nil
}

type SortField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Desc          bool                   `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortField) Reset() {
	*x = SortField{}
	mi := &file_paginator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortField) ProtoMessage() {}

func (x *SortField) ProtoReflect() protoreflect.Message {
	mi := &file_paginator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortField.ProtoReflect.Descriptor instead.
func (*SortField) Descriptor() ([]byte, []int) {
	return file_paginator_proto_rawDescGZIP(), []int{1}
}

func (x *SortField) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SortField) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type SearchQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []string               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Keyword       string                 `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchQuery) Reset() {
	*x = SearchQuery{}
	mi := &file_paginator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQuery) ProtoMessage() {}

func (x *SearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_paginator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQuery.ProtoReflect.Descriptor instead.
func (*SearchQuery) Descriptor() ([]byte, []int) {
	return file_paginator_proto_rawDescGZIP(), []int{2}
}

func (x *SearchQuery) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchQuery) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ComparisonFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Op            string                 `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComparisonFilter) Reset() {
	*x = ComparisonFilter{}
	mi := &file_paginator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComparisonFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparisonFilter) ProtoMessage() {}

func (x *ComparisonFilter) ProtoReflect() protoreflect.Message {
	mi := &file_paginator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparisonFilter.ProtoReflect.Descriptor instead.
func (*ComparisonFilter) Descriptor() ([]byte, []int) {
	return file_paginator_proto_rawDescGZIP(), []int{3}
}

func (x *ComparisonFilter) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ComparisonFilter) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *ComparisonFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PageData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Items         []byte                 `protobuf:"bytes,4,opt,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageData) Reset() {
	*x = PageData{}
	mi := &file_paginator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageData) ProtoMessage() {}

func (x *PageData) ProtoReflect() protoreflect.Message {
	mi := &file_paginator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageData.ProtoReflect.Descriptor instead.
func (*PageData) Descriptor() ([]byte, []int) {
	return file_paginator_proto_rawDescGZIP(), []int{4}
}

func (x *PageData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageData) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PageData) GetItems() []byte {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_paginator_proto protoreflect.FileDescriptor

const file_paginator_proto_rawDesc = "" +
	"\n" +
	"\x0fpaginator.proto\x12\tslicer.v1\"\xe5\x02\n" +
	"\fQueryOptions\x12\x12\n" +
	"\x04page\x18\x01 \x01(\rR\x04page\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12(\n" +
	"\x04sort\x18\x03 \x03(\v2\x14.slicer.v1.SortFieldR\x04sort\x12.\n" +
	"\x06search\x18\x04 \x01(\v2\x16.slicer.v1.SearchQueryR\x06search\x12\x16\n" +
	"\x06select\x18\x05 \x03(\tR\x06select\x12>\n" +
	"\afilters\x18\x06 \x03(\v2$.slicer.v1.QueryOptions.FiltersEntryR\afilters\x12=\n" +
	"\vcomparisons\x18\a \x03(\v2\x1b.slicer.v1.ComparisonFilterR\vcomparisons\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"5\n" +
	"\tSortField\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x12\n" +
	"\x04desc\x18\x02 \x01(\bR\x04desc\"?\n" +
	"\vSearchQuery\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x18\n" +
	"\akeyword\x18\x02 \x01(\tR\akeyword\"N\n" +
	"\x10ComparisonFilter\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x0e\n" +
	"\x02op\x18\x02 \x01(\tR\x02op\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\"`\n" +
	"\bPageData\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x14\n" +
	"\x05items\x18\x04 \x01(\fR\x05itemsB'Z%github.com/godev90/slicer/pb;slicerpbb\x06proto3"

var (
	file_paginator_proto_rawDescOnce sync.Once
	file_paginator_proto_rawDescData []byte
)

func file_paginator_proto_rawDescGZIP() []byte {
	file_paginator_proto_rawDescOnce.Do(func() {
		file_paginator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_paginator_proto_rawDesc), len(file_paginator_proto_rawDesc)))
	})
	return file_paginator_proto_rawDescData
}

var file_paginator_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_paginator_proto_goTypes = []any{
	(*QueryOptions)(nil),     // 0: slicer.v1.QueryOptions
	(*SortField)(nil),        // 1: slicer.v1.SortField
	(*SearchQuery)(nil),      // 2: slicer.v1.SearchQuery
	(*ComparisonFilter)(nil), // 3: slicer.v1.ComparisonFilter
	(*PageData)(nil),         // 4: slicer.v1.PageData
	nil,                      // 5: slicer.v1.QueryOptions.FiltersEntry
}
var file_paginator_proto_depIdxs = []int32{
	1, // 0: slicer.v1.QueryOptions.sort:type_name -> slicer.v1.SortField
	2, // 1: slicer.v1.QueryOptions.search:type_name -> slicer.v1.SearchQuery
	5, // 2: slicer.v1.QueryOptions.filters:type_name -> slicer.v1.QueryOptions.FiltersEntry
	3, // 3: slicer.v1.QueryOptions.comparisons:type_name -> slicer.v1.ComparisonFilter
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_paginator_proto_init() }
func file_paginator_proto_init() {
	if File_paginator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_paginator_proto_rawDesc), len(file_paginator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_paginator_proto_goTypes,
		DependencyIndexes: file_paginator_proto_depIdxs,
		MessageInfos:      file_paginator_proto_msgTypes,
	}.Build()
	File_paginator_proto = out.File
	file_paginator_proto_goTypes = nil
	file_paginator_proto_depIdxs = nil
}
